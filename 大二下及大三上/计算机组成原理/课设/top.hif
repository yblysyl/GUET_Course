HIF003
--
-- Copyright (C) 1988-2000 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	fen2.vhd
	{
		fen2 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			61 [] [];
		}
	}
	mux3_2.vhd
	{
		mux3_2 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			60 [] [];
		}
	}
	convert.vhd
	{
		convert [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			59 [] [];
		}
	}
	psw.vhd
	{
		psw [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			58 [] [];
		}
	}
	alu.vhd
	{
		alu [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			57 [] [];
		}
	}
	ir.vhd
	{
		ir [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			56 [] [];
		}
	}
	ram.vhd
	{
		ram [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			55 [] [];
		}
	}
	rom.vhd
	{
		rom [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			54 [] [];
		}
	}
	mux4_2.vhd
	{
		mux4_2 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			53 [] [];
		}
	}
	mux4_1.vhd
	{
		mux4_1 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			52 [] [];
		}
	}
	mux3_1.vhd
	{
		mux3_1 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			51 [] [];
		}
	}
	ls273.vhd
	{
		ls273 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			49 [] [];
		}
	}
	decoder.vhd
	{
		decoder [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			48 [] [];
		}
	}
	crom.gdf
	{
		crom [] []
		{
			39 [] [];
		}
	}
	counter.vhd
	{
		counter [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			38 [] [];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			2 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=2,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [DATAA0,DATAA1,DATAB0,DATAB1,CIN,RESULT0,RESULT1];
			18 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7];
			28 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=9,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAA8,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,DATAB8,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7,RESULT8];
			31 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7];
			32 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=9,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K,STYLE=NORMAL] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAA5,DATAA6,DATAA7,DATAA8,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,DATAB5,DATAB6,DATAB7,DATAB8,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4,RESULT5,RESULT6,RESULT7,RESULT8];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			3 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=2,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,dataa0,dataa1,result0,result1];
			19 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=8,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,result0,result1,result2,result3,result4,result5,result6,result7];
			29 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=9,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=ACEX1K] [cin,datab0,datab1,datab2,datab3,datab4,datab5,datab6,datab7,datab8,dataa0,dataa1,dataa2,dataa3,dataa4,dataa5,dataa6,dataa7,dataa8,result0,result1,result2,result3,result4,result5,result6,result7,result8];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			4 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=2,DEPTH=0] [data0,data1,result0,result1];
			5 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=1,DEPTH=0] [data0,result0];
			20 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=8,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,data7,result0,result1,result2,result3,result4,result5,result6,result7];
			30 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=9,DEPTH=0] [data0,data1,data2,data3,data4,data5,data6,data7,data8,result0,result1,result2,result3,result4,result5,result6,result7,result8];
		}
	}
	controm.vhd
	{
		controm [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			40 [] [];
		}
	}
	f2.vhd
	{
		f2 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			41 [] [];
		}
	}
	f3.vhd
	{
		f3 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			42 [] [];
		}
	}
	addr.vhd
	{
		addr [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			43 [] [];
		}
	}
	aa.gdf
	{
		aa [] []
		{
			44 [] [];
		}
	}
	mmm.vhd
	{
		mmm [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			45 [] [];
		}
	}
	f1.vhd
	{
		f1 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			46 [] [];
		}
	}
	mcommand.vhd
	{
		mcommand [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			47 [] [];
		}
	}
	pc.vhd
	{
		pc [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			33 [] [];
		}
	}
	top.gdf
	{
		top [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	top::(0,0):(0): top.gdf
	{
		counter::(0,0):(1): counter.vhd
		{
			lpm_add_sub:2:(21,9):(64): lpm_add_sub.tdf
			{
				addcore:3:(212,4):(40,adder): addcore.tdf;
				altshift:4:(222,2):(53,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(63,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(71,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		crom::(0,0):(2): crom.gdf
		{
			controm:40:(0,0):(9): controm.vhd;
			f2:41:(0,0):(10): f2.vhd;
			f3:42:(0,0):(11): f3.vhd;
			addr:43:(0,0):(12): addr.vhd;
			aa:44:(0,0):(13): aa.gdf
			{
				mmm:45:(0,0):(21): mmm.vhd;
				mmm:45:(0,0):(23): mmm.vhd;
				mmm:45:(0,0):(22): mmm.vhd;
				mmm:45:(0,0):(26): mmm.vhd;
				mmm:45:(0,0):(25): mmm.vhd;
				mmm:45:(0,0):(24): mmm.vhd;
			}
			f1:46:(0,0):(14): f1.vhd;
			mcommand:47:(0,0):(15): mcommand.vhd;
		}
		decoder::(0,0):(3): decoder.vhd;
		ls273::(0,0):(8): ls273.vhd;
		ls273::(0,0):(9): ls273.vhd;
		ls273::(0,0):(10): ls273.vhd;
		ls273::(0,0):(11): ls273.vhd;
		pc::(0,0):(12): pc.vhd
		{
			lpm_add_sub:18:(22,13):(132): lpm_add_sub.tdf
			{
				addcore:19:(212,4):(58,adder): addcore.tdf;
				altshift:20:(222,2):(89,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(111,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(119,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		ls273::(0,0):(13): ls273.vhd;
		mux3_1::(0,0):(14): mux3_1.vhd;
		mux4_1::(0,0):(15): mux4_1.vhd;
		mux4_2::(0,0):(16): mux4_2.vhd;
		rom::(0,0):(17): rom.vhd;
		ram::(0,0):(18): ram.vhd;
		ir::(0,0):(19): ir.vhd;
		alu::(0,0):(20): alu.vhd
		{
			lpm_add_sub:28:(19,9):(536): lpm_add_sub.tdf
			{
				addcore:29:(212,4):(61,adder): addcore.tdf;
				altshift:30:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:31:(31,10):(760): lpm_add_sub.tdf
			{
				addcore:19:(212,4):(58,adder): addcore.tdf;
				altshift:20:(222,2):(89,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(111,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(119,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:32:(46,9):(1040): lpm_add_sub.tdf
			{
				addcore:29:(212,4):(61,adder): addcore.tdf;
				altshift:30:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:32:(57,10):(1309): lpm_add_sub.tdf
			{
				addcore:29:(212,4):(61,adder): addcore.tdf;
				altshift:30:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:32:(68,10):(1576): lpm_add_sub.tdf
			{
				addcore:29:(212,4):(61,adder): addcore.tdf;
				altshift:30:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:32:(79,11):(1845): lpm_add_sub.tdf
			{
				addcore:29:(212,4):(61,adder): addcore.tdf;
				altshift:30:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		psw::(0,0):(21): psw.vhd;
		convert::(0,0):(22): convert.vhd;
		mux3_2::(0,0):(23): mux3_2.vhd;
		fen2::(0,0):(24): fen2.vhd;
	}
}
