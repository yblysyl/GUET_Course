1、初始化符号表init（）
	将保留字、分隔符、运算符所包含的符号分别预先写入keyword、separator、opration.txt文件中；
	创建标识符id.txt和整数符int.txt，和最终词法二元式输出的token.txt文件

2、
（1）scanner（）扫描单词、分割、判断单词类别，写入token文件
	读入test.txt文件
	取出首字母
	①首字母以字母开头：
			  ·取出连续的字母或数字，加入word[]数组，
			  ·调用ch_manage（）函数先判断字符条件是否符合，再判断是保留字还是标识符；
			  ·在ch_mangae（）函数中，根据查表函数find（）先查保留字表，判断出该单词是否为保留字，
			  command=1（只查表）:
		                   	若是，返回表中序号，取result值为类号值（保留字都是result=3)，写入token文件；
			  	若不是，返回0，调用find（）函数查标识符表，若是，一样的取result，写token;
		                   command=2（要造表）：
			  	若两者都不是，向表中添加标识符
	②首字母以数字开头：
			  该连续字符串为数字，调用int_manage（），根据find（）command=2将数字字符添加入整数表
			  类型号为2（直接=buffer值）
	③消除字符：	消除空格和\t
			消除回车\n，记录行数
			消除注释/  { 下一个字符不是*也不是/：是除号，类型号记为15
				{ 下一个字符是/：  // 消除后面整行的注释
				{下一个字符是*  ：/* 消除后面的注释，直到遇到*且后面是/ 结束
	④其他字符：	先读入双字符，find()判断是否为双字运算符或分隔符，
			若是，写入token，result=12~21为对应运算符类型号，result2=22~28为对应分隔符类型号
			若不是，读入单字符检测，find()判断是否为双字运算符或分隔符，是，同样写进token；
			不是，则为非法字符，调用error_manage()函数报出出错符号和出错行
	⑤出错处理：	比如字母字符串长度>8，数字字符串长度>5，符号值>MAXNUM
			报出出错符号和行数

 （2）按类型处理单词：
	ch_manage:处理字符串{识别保留字
			    {识别标识符
	int_mange：处理整数
	error_manage:处理出错，报出出错符号和行数
	删除{无用符号
	       {空行
	       {注释
 （3）查表or加表find（），case()类别判断，并最终归类到二元式中，写入token.txt

3、输出二元式printf
	类型	idstr
	类型号	style



EOF：end of file 文章的结尾处